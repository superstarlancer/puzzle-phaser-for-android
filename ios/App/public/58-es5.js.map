{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-segment_2-md.entry.js"],"names":["segmentIosCss","segmentMdCss","Segment","hostRef","didInit","activated","disabled","scrollable","onClick","ev","current","target","previous","checked","value","checkButton","ionChange","ionSelect","ionStyle","oldValue","emit","valueAfterGesture","gestureChanged","buttons","getButtons","button","gesture","enable","emitStyle","setCheckedClasses","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","onEnd","disabledChanged","detail","activate","setNextIndex","setActivated","checkedValidButton","event","stopImmediatePropagation","addRipple","undefined","Array","from","querySelectorAll","useRippleEffect","getBoolean","find","root","shadowRoot","ripple","querySelector","x","y","then","remove","forEach","classList","add","clicked","tagName","previousIndicator","getIndicator","currentIndicator","previousClientRect","getBoundingClientRect","currentClientRect","widthDelta","width","xPosition","left","transform","style","setProperty","index","findIndex","next","length","isEnd","isRTL","document","dir","nextIndex","rect","currentX","previousY","top","height","nextEl","elementFromPoint","decreaseIndex","increaseIndex","newIndex","mode","Object","assign","color","ios","md","segmentButtonIosCss","segmentButtonMdCss","ids","SegmentButton","segmentEl","layout","type","updateState","closest","addEventListener","removeEventListener","hasIcon","hasLabel","part"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMA,aAAa,GAAG,ktCAAtB;AAEA,QAAMC,YAAY,GAAG,ymBAArB;;AAEA,QAAMC,OAAO;AACT,uBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjB,qEAAiB,IAAjB,EAAuBA,OAAvB;AACA,aAAKC,OAAL,GAAe,KAAf;AACA,aAAKC,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,aAAKC,QAAL,GAAgB,KAAhB;AACA;;;;;;AAKA,aAAKC,UAAL,GAAkB,KAAlB;;AACA,aAAKC,OAAL,GAAe,UAACC,EAAD,EAAQ;AACnB,cAAMC,OAAO,GAAGD,EAAE,CAACE,MAAnB;AACA,cAAMC,QAAQ,GAAG,KAAI,CAACC,OAAtB;AACA,eAAI,CAACC,KAAL,GAAaJ,OAAO,CAACI,KAArB;;AACA,cAAIF,QAAQ,IAAI,KAAI,CAACL,UAArB,EAAiC;AAC7B,iBAAI,CAACQ,WAAL,CAAiBH,QAAjB,EAA2BF,OAA3B;AACH;;AACD,eAAI,CAACG,OAAL,GAAeH,OAAf;AACH,SARD;;AASA,aAAKM,SAAL,GAAiB,6DAAY,IAAZ,EAAkB,WAAlB,EAA+B,CAA/B,CAAjB;AACA,aAAKC,SAAL,GAAiB,6DAAY,IAAZ,EAAkB,WAAlB,EAA+B,CAA/B,CAAjB;AACA,aAAKC,QAAL,GAAgB,6DAAY,IAAZ,EAAkB,UAAlB,EAA8B,CAA9B,CAAhB;AACH;;AA3BQ;AAAA;AAAA,qCA4BIJ,KA5BJ,EA4BWK,QA5BX,EA4BqB;AAC1B,eAAKF,SAAL,CAAeG,IAAf,CAAoB;AAAEN,iBAAK,EAALA;AAAF,WAApB;;AACA,cAAIK,QAAQ,KAAK,EAAb,IAAmB,KAAKf,OAA5B,EAAqC;AACjC,gBAAI,CAAC,KAAKC,SAAV,EAAqB;AACjB,mBAAKW,SAAL,CAAeI,IAAf,CAAoB;AAAEN,qBAAK,EAALA;AAAF,eAApB;AACH,aAFD,MAGK;AACD,mBAAKO,iBAAL,GAAyBP,KAAzB;AACH;AACJ;AACJ;AAtCQ;AAAA;AAAA,0CAuCS;AACd,eAAKQ,cAAL;AACA,cAAMC,OAAO,GAAG,KAAKC,UAAL,EAAhB;;AAFc,qDAGOD,OAHP;AAAA;;AAAA;AAGd,gEAA8B;AAAA,kBAAnBE,MAAmB;AAC1BA,oBAAM,CAACnB,QAAP,GAAkB,KAAKA,QAAvB;AACH;AALa;AAAA;AAAA;AAAA;AAAA;AAMjB;AA7CQ;AAAA;AAAA,yCA8CQ;AACb,cAAI,KAAKoB,OAAL,IAAgB,CAAC,KAAKnB,UAA1B,EAAsC;AAClC,iBAAKmB,OAAL,CAAaC,MAAb,CAAoB,CAAC,KAAKrB,QAA1B;AACH;AACJ;AAlDQ;AAAA;AAAA,4CAmDW;AAChB,eAAKsB,SAAL;AACH;AArDQ;AAAA;AAAA,4CAsDW;AAChB,eAAKA,SAAL;AACH;AAxDQ;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AA0DL,yBAAKC,iBAAL;AA1DK;AAAA,2BA2DiB;AAAA;AAAA,6EA3DjB;;AAAA;AA2DL,yBAAKH,OA3DA,iBA2DgDI,aA3DhD,CA2D8D;AAC/DC,wBAAE,EAAE,KAAKA,EADsD;AAE/DC,iCAAW,EAAE,SAFkD;AAG/DC,qCAAe,EAAE,GAH8C;AAI/DC,+BAAS,EAAE,CAJoD;AAK/DC,6BAAO,EAAE,KALsD;AAM/DC,6BAAO,EAAE,iBAAA3B,EAAE;AAAA,+BAAI,MAAI,CAAC2B,OAAL,CAAa3B,EAAb,CAAJ;AAAA,uBANoD;AAO/D4B,4BAAM,EAAE,gBAAA5B,EAAE;AAAA,+BAAI,MAAI,CAAC4B,MAAL,CAAY5B,EAAZ,CAAJ;AAAA,uBAPqD;AAQ/D6B,2BAAK,EAAE,eAAA7B,EAAE;AAAA,+BAAI,MAAI,CAAC6B,KAAL,CAAW7B,EAAX,CAAJ;AAAA;AARsD,qBA3D9D;AAqEL,yBAAKiB,OAAL,CAAaC,MAAb,CAAoB,CAAC,KAAKpB,UAA1B;AACA,yBAAKe,cAAL;;AACA,wBAAI,KAAKhB,QAAT,EAAmB;AACf,2BAAKiC,eAAL;AACH;;AACD,yBAAKnC,OAAL,GAAe,IAAf;;AA1EK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gCA4EDoC,MA5EC,EA4EO;AACZ,eAAKC,QAAL,CAAcD,MAAd;AACH;AA9EQ;AAAA;AAAA,+BA+EFA,MA/EE,EA+EM;AACX,eAAKE,YAAL,CAAkBF,MAAlB;AACH;AAjFQ;AAAA;AAAA,8BAkFHA,MAlFG,EAkFK;AACV,eAAKG,YAAL,CAAkB,KAAlB;AACA,cAAMC,kBAAkB,GAAG,KAAKF,YAAL,CAAkBF,MAAlB,EAA0B,IAA1B,CAA3B;AACAA,gBAAM,CAACK,KAAP,CAAaC,wBAAb;;AACA,cAAIF,kBAAJ,EAAwB;AACpB,iBAAKG,SAAL,CAAeP,MAAf;AACH;;AACD,cAAM1B,KAAK,GAAG,KAAKO,iBAAnB;;AACA,cAAIP,KAAK,KAAKkC,SAAd,EAAyB;AACrB,iBAAKhC,SAAL,CAAeI,IAAf,CAAoB;AAAEN,mBAAK,EAALA;AAAF,aAApB;AACA,iBAAKO,iBAAL,GAAyB2B,SAAzB;AACH;AACJ;AA9FQ;AAAA;AAAA,qCA+FI;AACT,iBAAOC,KAAK,CAACC,IAAN,CAAW,KAAKnB,EAAL,CAAQoB,gBAAR,CAAyB,oBAAzB,CAAX,CAAP;AACH;AACD;;;;;;AAlGS;AAAA;AAAA,kCAuGCX,MAvGD,EAuGS;AAAA;;AACd,cAAMY,eAAe,GAAG,4DAAOC,UAAP,CAAkB,UAAlB,EAA8B,IAA9B,KAAuC,4DAAOA,UAAP,CAAkB,cAAlB,EAAkC,IAAlC,CAA/D;;AACA,cAAI,CAACD,eAAL,EAAsB;AAClB;AACH;;AACD,cAAM7B,OAAO,GAAG,KAAKC,UAAL,EAAhB;AACA,cAAMX,OAAO,GAAGU,OAAO,CAAC+B,IAAR,CAAa,UAAA7B,MAAM;AAAA,mBAAIA,MAAM,CAACX,KAAP,KAAiB,MAAI,CAACA,KAA1B;AAAA,WAAnB,CAAhB;AACA,cAAMyC,IAAI,GAAG1C,OAAO,CAAC2C,UAAR,IAAsB3C,OAAnC;AACA,cAAM4C,MAAM,GAAGF,IAAI,CAACG,aAAL,CAAmB,mBAAnB,CAAf;;AACA,cAAI,CAACD,MAAL,EAAa;AACT;AACH;;AAXa,wBAYG,+DAAajB,MAAM,CAACK,KAApB,CAZH;AAAA,cAYNc,CAZM,WAYNA,CAZM;AAAA,cAYHC,CAZG,WAYHA,CAZG;;AAadH,gBAAM,CAACV,SAAP,CAAiBY,CAAjB,EAAoBC,CAApB,EAAuBC,IAAvB,CAA4B,UAAAC,MAAM;AAAA,mBAAIA,MAAM,EAAV;AAAA,WAAlC;AACH;AACD;;;;;AAtHS;AAAA;AAAA,qCA0HIzD,SA1HJ,EA0He;AACpB,cAAMkB,OAAO,GAAG,KAAKC,UAAL,EAAhB;AACAD,iBAAO,CAACwC,OAAR,CAAgB,UAAAtC,MAAM,EAAI;AACtB,gBAAIpB,SAAJ,EAAe;AACXoB,oBAAM,CAACuC,SAAP,CAAiBC,GAAjB,CAAqB,0BAArB;AACH,aAFD,MAGK;AACDxC,oBAAM,CAACuC,SAAP,CAAiBF,MAAjB,CAAwB,0BAAxB;AACH;AACJ,WAPD;AAQA,eAAKzD,SAAL,GAAiBA,SAAjB;AACH;AArIQ;AAAA;AAAA,iCAsIAmC,MAtIA,EAsIQ;AAAA;;AACb,cAAM0B,OAAO,GAAG1B,MAAM,CAACK,KAAP,CAAalC,MAA7B;AACA,cAAMY,OAAO,GAAG,KAAKC,UAAL,EAAhB;AACA,cAAMX,OAAO,GAAGU,OAAO,CAAC+B,IAAR,CAAa,UAAA7B,MAAM;AAAA,mBAAIA,MAAM,CAACX,KAAP,KAAiB,MAAI,CAACA,KAA1B;AAAA,WAAnB,CAAhB,CAHa,CAIb;AACA;;AACA,cAAIoD,OAAO,CAACC,OAAR,KAAoB,oBAAxB,EAA8C;AAC1C;AACH,WARY,CASb;;;AACA,cAAI,CAACtD,OAAL,EAAc;AACV,iBAAKC,KAAL,GAAaoD,OAAO,CAACpD,KAArB;AACH,WAZY,CAab;AACA;;;AACA,cAAI,KAAKA,KAAL,KAAeoD,OAAO,CAACpD,KAA3B,EAAkC;AAC9B,iBAAK6B,YAAL,CAAkB,IAAlB;AACH;AACJ;AAxJQ;AAAA;AAAA,qCAyJIlB,MAzJJ,EAyJY;AACjB,cAAM8B,IAAI,GAAG9B,MAAM,CAAC+B,UAAP,IAAqB/B,MAAlC;AACA,iBAAO8B,IAAI,CAACG,aAAL,CAAmB,2BAAnB,CAAP;AACH;AA5JQ;AAAA;AAAA,oCA6JG9C,QA7JH,EA6JaF,OA7Jb,EA6JsB;AAC3B,cAAM0D,iBAAiB,GAAG,KAAKC,YAAL,CAAkBzD,QAAlB,CAA1B;AACA,cAAM0D,gBAAgB,GAAG,KAAKD,YAAL,CAAkB3D,OAAlB,CAAzB;;AACA,cAAI0D,iBAAiB,KAAK,IAAtB,IAA8BE,gBAAgB,KAAK,IAAvD,EAA6D;AACzD;AACH;;AACD,cAAMC,kBAAkB,GAAGH,iBAAiB,CAACI,qBAAlB,EAA3B;AACA,cAAMC,iBAAiB,GAAGH,gBAAgB,CAACE,qBAAjB,EAA1B;AACA,cAAME,UAAU,GAAGH,kBAAkB,CAACI,KAAnB,GAA2BF,iBAAiB,CAACE,KAAhE;AACA,cAAMC,SAAS,GAAGL,kBAAkB,CAACM,IAAnB,GAA0BJ,iBAAiB,CAACI,IAA9D,CAT2B,CAU3B;AACA;;AACA,cAAMC,SAAS,yBAAkBF,SAAlB,8BAA+CF,UAA/C,MAAf;AACA,uEAAU,YAAM;AACZ;AACAJ,4BAAgB,CAACN,SAAjB,CAA2BF,MAA3B,CAAkC,mCAAlC;AACAQ,4BAAgB,CAACS,KAAjB,CAAuBC,WAAvB,CAAmC,WAAnC,EAAgDF,SAAhD,EAHY,CAIZ;;AACAR,4BAAgB,CAACE,qBAAjB,GALY,CAMZ;;AACAF,4BAAgB,CAACN,SAAjB,CAA2BC,GAA3B,CAA+B,mCAA/B,EAPY,CAQZ;;AACAK,4BAAgB,CAACS,KAAjB,CAAuBC,WAAvB,CAAmC,WAAnC,EAAgD,EAAhD;AACH,WAVD;AAWA,eAAKlE,KAAL,GAAaJ,OAAO,CAACI,KAArB;AACA,eAAKe,iBAAL;AACH;AAvLQ;AAAA;AAAA,4CAwLW;AAAA;;AAChB,cAAMN,OAAO,GAAG,KAAKC,UAAL,EAAhB;AACA,cAAMyD,KAAK,GAAG1D,OAAO,CAAC2D,SAAR,CAAkB,UAAAzD,MAAM;AAAA,mBAAIA,MAAM,CAACX,KAAP,KAAiB,MAAI,CAACA,KAA1B;AAAA,WAAxB,CAAd;AACA,cAAMqE,IAAI,GAAGF,KAAK,GAAG,CAArB,CAHgB,CAIhB;;AACA,eAAKpE,OAAL,GAAeU,OAAO,CAAC+B,IAAR,CAAa,UAAA7B,MAAM;AAAA,mBAAIA,MAAM,CAACX,KAAP,KAAiB,MAAI,CAACA,KAA1B;AAAA,WAAnB,CAAf;;AALgB,sDAMKS,OANL;AAAA;;AAAA;AAMhB,mEAA8B;AAAA,kBAAnBE,MAAmB;AAC1BA,oBAAM,CAACuC,SAAP,CAAiBF,MAAjB,CAAwB,8BAAxB;AACH;AARe;AAAA;AAAA;AAAA;AAAA;;AAShB,cAAIqB,IAAI,GAAG5D,OAAO,CAAC6D,MAAnB,EAA2B;AACvB7D,mBAAO,CAAC4D,IAAD,CAAP,CAAcnB,SAAd,CAAwBC,GAAxB,CAA4B,8BAA5B;AACH;AACJ;AApMQ;AAAA;AAAA,qCAqMIzB,MArMJ,EAqM2B;AAAA;;AAAA,cAAf6C,KAAe,uEAAP,KAAO;AAChC,cAAMC,KAAK,GAAGC,QAAQ,CAACC,GAAT,KAAiB,KAA/B;AACA,cAAMnF,SAAS,GAAG,KAAKA,SAAvB;AACA,cAAMkB,OAAO,GAAG,KAAKC,UAAL,EAAhB;AACA,cAAMyD,KAAK,GAAG1D,OAAO,CAAC2D,SAAR,CAAkB,UAAAzD,MAAM;AAAA,mBAAIA,MAAM,CAACX,KAAP,KAAiB,MAAI,CAACA,KAA1B;AAAA,WAAxB,CAAd;AACA,cAAMF,QAAQ,GAAGW,OAAO,CAAC0D,KAAD,CAAxB;AACA,cAAIvE,OAAJ;AACA,cAAI+E,SAAJ;;AACA,cAAIR,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd;AACH,WAV+B,CAWhC;AACA;;;AACA,cAAMS,IAAI,GAAG9E,QAAQ,CAAC4D,qBAAT,EAAb;AACA,cAAMK,IAAI,GAAGa,IAAI,CAACb,IAAlB;AACA,cAAMF,KAAK,GAAGe,IAAI,CAACf,KAAnB,CAfgC,CAgBhC;AACA;AACA;;AACA,cAAMgB,QAAQ,GAAGnD,MAAM,CAACmD,QAAxB;AACA,cAAMC,SAAS,GAAGF,IAAI,CAACG,GAAL,GAAYH,IAAI,CAACI,MAAL,GAAc,CAA5C;AACA,cAAMC,MAAM,GAAGR,QAAQ,CAACS,gBAAT,CAA0BL,QAA1B,EAAoCC,SAApC,CAAf;AACA,cAAMK,aAAa,GAAGX,KAAK,GAAGK,QAAQ,GAAId,IAAI,GAAGF,KAAtB,GAA+BgB,QAAQ,GAAGd,IAArE;AACA,cAAMqB,aAAa,GAAGZ,KAAK,GAAGK,QAAQ,GAAGd,IAAd,GAAqBc,QAAQ,GAAId,IAAI,GAAGF,KAAnE,CAvBgC,CAwBhC;AACA;AACA;;AACA,cAAItE,SAAS,IAAI,CAACgF,KAAlB,EAAyB;AACrB;AACA,gBAAIY,aAAJ,EAAmB;AACf,kBAAME,QAAQ,GAAGlB,KAAK,GAAG,CAAzB;;AACA,kBAAIkB,QAAQ,IAAI,CAAhB,EAAmB;AACfV,yBAAS,GAAGU,QAAZ;AACH,eAJc,CAKf;;AACH,aAND,MAOK,IAAID,aAAJ,EAAmB;AACpB,kBAAI7F,SAAS,IAAI,CAACgF,KAAlB,EAAyB;AACrB,oBAAMc,SAAQ,GAAGlB,KAAK,GAAG,CAAzB;;AACA,oBAAIkB,SAAQ,GAAG5E,OAAO,CAAC6D,MAAvB,EAA+B;AAC3BK,2BAAS,GAAGU,SAAZ;AACH;AACJ;AACJ;;AACD,gBAAIV,SAAS,KAAKzC,SAAd,IAA2B,CAACzB,OAAO,CAACkE,SAAD,CAAP,CAAmBnF,QAAnD,EAA6D;AACzDI,qBAAO,GAAGa,OAAO,CAACkE,SAAD,CAAjB;AACH;AACJ,WA/C+B,CAgDhC;AACA;;;AACA,cAAI,CAACpF,SAAD,IAAcgF,KAAlB,EAAyB;AACrB3E,mBAAO,GAAGqF,MAAV;AACH;AACD;;;AACA,cAAIrF,OAAO,IAAI,IAAf,EAAqB;AACjB;;;;;AAKA,gBAAIA,OAAO,CAACyD,OAAR,KAAoB,aAAxB,EAAuC;AACnC,qBAAO,KAAP;AACH;;AACD,gBAAIvD,QAAQ,KAAKF,OAAjB,EAA0B;AACtB,mBAAKK,WAAL,CAAiBH,QAAjB,EAA2BF,OAA3B;AACH;AACJ;;AACD,iBAAO,IAAP;AACH;AAzQQ;AAAA;AAAA,oCA0QG;AACR,eAAKQ,QAAL,CAAcE,IAAd,CAAmB;AACf,uBAAW;AADI,WAAnB;AAGH;AA9QQ;AAAA;AAAA,iCA+QA;AAAA;;AACL,cAAMgF,IAAI,GAAG,oEAAW,IAAX,CAAb;AACA,iBAAQ,6DAAE,oDAAF,EAAQ;AAAE5F,mBAAO,EAAE,KAAKA,OAAhB;AAAyB,qBAAO6F,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,6DAAmB,KAAKC,KAAxB,CAAlB,CAAd,wDAAoEH,IAApE,EAA2E,IAA3E,mCAAiF,YAAjF,EAA+F,6DAAY,aAAZ,EAA2B,KAAKrE,EAAhC,CAA/F,mCAAoI,kBAApI,EAAwJ,6DAAY,oBAAZ,EAAkC,KAAKA,EAAvC,CAAxJ,mCAAoM,mBAApM,EAAyN,KAAK1B,SAA9N,mCAAyO,kBAAzO,EAA6P,KAAKC,QAAlQ,mCAA4Q,oBAA5Q,EAAkS,KAAKC,UAAvS;AAAhC,WAAR,EAAgW,6DAAE,MAAF,EAAU,IAAV,CAAhW,CAAR;AACH;AAlRQ;AAAA;AAAA,4BAmRA;AAAE,iBAAO,6DAAW,IAAX,CAAP;AAA0B;AAnR5B;AAAA;AAAA,4BAoRa;AAAE,iBAAO;AAC3B,qBAAS,CAAC,cAAD,CADkB;AAE3B,wBAAY,CAAC,iBAAD;AAFe,WAAP;AAGpB;AAvRK;;AAAA;AAAA,OAAb;;AAyRAL,WAAO,CAAC6E,KAAR,GAAgB;AACZ;AAAqByB,SAAG,EAAExG,aADd;;AAEZ;AAAoByG,QAAE,EAAExG;AAFZ,KAAhB;AAKA,QAAMyG,mBAAmB,GAAG,+rSAA5B;AAEA,QAAMC,kBAAkB,GAAG,qhSAA3B;AAEA,QAAIC,GAAG,GAAG,CAAV;;AACA,QAAMC,aAAa;AACf,6BAAY1G,OAAZ,EAAqB;AAAA;;AAAA;;AACjB,qEAAiB,IAAjB,EAAuBA,OAAvB;AACA,aAAK2G,SAAL,GAAiB,IAAjB;AACA,aAAKjG,OAAL,GAAe,KAAf;AACA;;;;AAGA,aAAKP,QAAL,GAAgB,KAAhB;AACA;;;;AAGA,aAAKyG,MAAL,GAAc,UAAd;AACA;;;;AAGA,aAAKC,IAAL,GAAY,QAAZ;AACA;;;;AAGA,aAAKlG,KAAL,GAAa,YAAa8F,GAAG,EAA7B;;AACA,aAAKK,WAAL,GAAmB,YAAM;AACrB,cAAI,MAAI,CAACH,SAAT,EAAoB;AAChB,kBAAI,CAACjG,OAAL,GAAe,MAAI,CAACiG,SAAL,CAAehG,KAAf,KAAyB,MAAI,CAACA,KAA7C;AACH;AACJ,SAJD;AAKH;;AA1Bc;AAAA;AAAA,4CA2BK;AAChB,cAAMgG,SAAS,GAAG,KAAKA,SAAL,GAAiB,KAAK/E,EAAL,CAAQmF,OAAR,CAAgB,aAAhB,CAAnC;;AACA,cAAIJ,SAAJ,EAAe;AACX,iBAAKG,WAAL;AACAH,qBAAS,CAACK,gBAAV,CAA2B,WAA3B,EAAwC,KAAKF,WAA7C;AACH;AACJ;AAjCc;AAAA;AAAA,+CAkCQ;AACnB,cAAMH,SAAS,GAAG,KAAKA,SAAvB;;AACA,cAAIA,SAAJ,EAAe;AACXA,qBAAS,CAACM,mBAAV,CAA8B,WAA9B,EAA2C,KAAKH,WAAhD;AACA,iBAAKH,SAAL,GAAiB,IAAjB;AACH;AACJ;AAxCc;AAAA;AAAA,iCA+CN;AAAA;;AAAA,cACGjG,OADH,GAC0D,IAD1D,CACGA,OADH;AAAA,cACYmG,IADZ,GAC0D,IAD1D,CACYA,IADZ;AAAA,cACkB1G,QADlB,GAC0D,IAD1D,CACkBA,QADlB;AAAA,cAC4B+G,OAD5B,GAC0D,IAD1D,CAC4BA,OAD5B;AAAA,cACqCC,QADrC,GAC0D,IAD1D,CACqCA,QADrC;AAAA,cAC+CP,MAD/C,GAC0D,IAD1D,CAC+CA,MAD/C;AAEL,cAAMX,IAAI,GAAG,oEAAW,IAAX,CAAb;AACA,iBAAQ,6DAAE,oDAAF,EAAQ;AAAE,6BAAiB9F,QAAQ,GAAG,MAAH,GAAY,IAAvC;AAA6C,2DACpD8F,IADoD,EAC7C,IAD6C,2BAErD,YAFqD,EAEvC,6DAAY,aAAZ,EAA2B,KAAKrE,EAAhC,CAFuC,2BAGrD,kBAHqD,EAGjC,6DAAY,oBAAZ,EAAkC,KAAKA,EAAvC,CAHiC,2BAIrD,YAJqD,EAIvC,6DAAY,aAAZ,EAA2B,KAAKA,EAAhC,CAJuC,2BAKrD,kBALqD,EAKjC,6DAAY,oBAAZ,EAAkC,KAAKA,EAAvC,CALiC,2BAMrD,0BANqD,EAMzBuF,QANyB,2BAOrD,yBAPqD,EAO1BD,OAP0B,2BAQrD,+BARqD,EAQpBC,QAAQ,IAAI,CAACD,OARO,2BASrD,8BATqD,EASrBA,OAAO,IAAI,CAACC,QATS,2BAUrD,yBAVqD,EAU1BhH,QAV0B,2BAWrD,wBAXqD,EAW3BO,OAX2B,2DAY3BkG,MAZ2B,GAYhB,IAZgB,2BAarD,iBAbqD,EAalC,IAbkC,2BAcrD,yBAdqD,EAc1B,IAd0B,2BAerD,eAfqD,EAepC,IAfoC;AAA7C,WAAR,EAgBC,6DAAE,QAAF,EAAY;AAAEC,gBAAI,EAAEA,IAAR;AAAc,4BAAgBnG,OAAO,GAAG,MAAH,GAAY,OAAjD;AAA0D,qBAAO,eAAjE;AAAkFP,oBAAQ,EAAEA;AAA5F,WAAZ,EAAoH,6DAAE,MAAF,EAAU;AAAE,qBAAO;AAAT,WAAV,EAAqC,6DAAE,MAAF,EAAU,IAAV,CAArC,CAApH,EAA2K8F,IAAI,KAAK,IAAT,IAAiB,6DAAE,mBAAF,EAAuB,IAAvB,CAA5L,CAhBD,EAgB4N,6DAAE,KAAF,EAAS;AAAEmB,gBAAI,EAAE,WAAR;AAAqB,qBAAO;AACjQ,0CAA4B,IADqO;AAEjQ,mDAAqC;AAF4N;AAA5B,WAAT,EAG3N,6DAAE,KAAF,EAAS;AAAEA,gBAAI,EAAE,sBAAR;AAAgC,qBAAO;AAAvC,WAAT,CAH2N,CAhB5N,CAAR;AAoBH;AAtEc;AAAA;AAAA,4BAyCA;AACX,iBAAO,CAAC,CAAC,KAAKxF,EAAL,CAAQ2B,aAAR,CAAsB,WAAtB,CAAT;AACH;AA3Cc;AAAA;AAAA,4BA4CD;AACV,iBAAO,CAAC,CAAC,KAAK3B,EAAL,CAAQ2B,aAAR,CAAsB,UAAtB,CAAT;AACH;AA9Cc;AAAA;AAAA,4BAuEN;AAAE,iBAAO,6DAAW,IAAX,CAAP;AAA0B;AAvEtB;;AAAA;AAAA,OAAnB;;AAyEAmD,iBAAa,CAAC9B,KAAd,GAAsB;AAClB;AAAqByB,SAAG,EAAEE,mBADR;;AAElB;AAAoBD,QAAE,EAAEE;AAFN,KAAtB","file":"58-es5.js","sourcesContent":["import { r as registerInstance, d as createEvent, w as writeTask, h, H as Host, e as getElement } from './index-e23c3ffd.js';\nimport { c as config, b as getIonMode } from './ionic-global-fbc9a2ac.js';\nimport { p as pointerCoord } from './helpers-5c745fbd.js';\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\n\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\n\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\n\nconst Segment = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.didInit = false;\n        this.activated = false;\n        /**\n         * If `true`, the user cannot interact with the segment.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the segment buttons will overflow and the user can swipe to see them.\n         * In addition, this will disable the gesture to drag the indicator between the buttons\n         * in order to swipe to see hidden buttons.\n         */\n        this.scrollable = false;\n        this.onClick = (ev) => {\n            const current = ev.target;\n            const previous = this.checked;\n            this.value = current.value;\n            if (previous && this.scrollable) {\n                this.checkButton(previous, current);\n            }\n            this.checked = current;\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionSelect = createEvent(this, \"ionSelect\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    valueChanged(value, oldValue) {\n        this.ionSelect.emit({ value });\n        if (oldValue !== '' || this.didInit) {\n            if (!this.activated) {\n                this.ionChange.emit({ value });\n            }\n            else {\n                this.valueAfterGesture = value;\n            }\n        }\n    }\n    disabledChanged() {\n        this.gestureChanged();\n        const buttons = this.getButtons();\n        for (const button of buttons) {\n            button.disabled = this.disabled;\n        }\n    }\n    gestureChanged() {\n        if (this.gesture && !this.scrollable) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    connectedCallback() {\n        this.emitStyle();\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    async componentDidLoad() {\n        this.setCheckedClasses();\n        this.gesture = (await import('./index-6f647ec8.js')).createGesture({\n            el: this.el,\n            gestureName: 'segment',\n            gesturePriority: 100,\n            threshold: 0,\n            passive: false,\n            onStart: ev => this.onStart(ev),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.gesture.enable(!this.scrollable);\n        this.gestureChanged();\n        if (this.disabled) {\n            this.disabledChanged();\n        }\n        this.didInit = true;\n    }\n    onStart(detail) {\n        this.activate(detail);\n    }\n    onMove(detail) {\n        this.setNextIndex(detail);\n    }\n    onEnd(detail) {\n        this.setActivated(false);\n        const checkedValidButton = this.setNextIndex(detail, true);\n        detail.event.stopImmediatePropagation();\n        if (checkedValidButton) {\n            this.addRipple(detail);\n        }\n        const value = this.valueAfterGesture;\n        if (value !== undefined) {\n            this.ionChange.emit({ value });\n            this.valueAfterGesture = undefined;\n        }\n    }\n    getButtons() {\n        return Array.from(this.el.querySelectorAll('ion-segment-button'));\n    }\n    /**\n     * The gesture blocks the segment button ripple. This\n     * function adds the ripple based on the checked segment\n     * and where the cursor ended.\n     */\n    addRipple(detail) {\n        const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n        if (!useRippleEffect) {\n            return;\n        }\n        const buttons = this.getButtons();\n        const checked = buttons.find(button => button.value === this.value);\n        const root = checked.shadowRoot || checked;\n        const ripple = root.querySelector('ion-ripple-effect');\n        if (!ripple) {\n            return;\n        }\n        const { x, y } = pointerCoord(detail.event);\n        ripple.addRipple(x, y).then(remove => remove());\n    }\n    /*\n     * Activate both the segment and the buttons\n     * due to a bug with ::slotted in Safari\n     */\n    setActivated(activated) {\n        const buttons = this.getButtons();\n        buttons.forEach(button => {\n            if (activated) {\n                button.classList.add('segment-button-activated');\n            }\n            else {\n                button.classList.remove('segment-button-activated');\n            }\n        });\n        this.activated = activated;\n    }\n    activate(detail) {\n        const clicked = detail.event.target;\n        const buttons = this.getButtons();\n        const checked = buttons.find(button => button.value === this.value);\n        // Make sure we are only checking for activation on a segment button\n        // since disabled buttons will get the click on the segment\n        if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n            return;\n        }\n        // If there are no checked buttons, set the current button to checked\n        if (!checked) {\n            this.value = clicked.value;\n        }\n        // If the gesture began on the clicked button with the indicator\n        // then we should activate the indicator\n        if (this.value === clicked.value) {\n            this.setActivated(true);\n        }\n    }\n    getIndicator(button) {\n        const root = button.shadowRoot || button;\n        return root.querySelector('.segment-button-indicator');\n    }\n    checkButton(previous, current) {\n        const previousIndicator = this.getIndicator(previous);\n        const currentIndicator = this.getIndicator(current);\n        if (previousIndicator === null || currentIndicator === null) {\n            return;\n        }\n        const previousClientRect = previousIndicator.getBoundingClientRect();\n        const currentClientRect = currentIndicator.getBoundingClientRect();\n        const widthDelta = previousClientRect.width / currentClientRect.width;\n        const xPosition = previousClientRect.left - currentClientRect.left;\n        // Scale the indicator width to match the previous indicator width\n        // and translate it on top of the previous indicator\n        const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\n        writeTask(() => {\n            // Remove the transition before positioning on top of the previous indicator\n            currentIndicator.classList.remove('segment-button-indicator-animated');\n            currentIndicator.style.setProperty('transform', transform);\n            // Force a repaint to ensure the transform happens\n            currentIndicator.getBoundingClientRect();\n            // Add the transition to move the indicator into place\n            currentIndicator.classList.add('segment-button-indicator-animated');\n            // Remove the transform to slide the indicator back to the button clicked\n            currentIndicator.style.setProperty('transform', '');\n        });\n        this.value = current.value;\n        this.setCheckedClasses();\n    }\n    setCheckedClasses() {\n        const buttons = this.getButtons();\n        const index = buttons.findIndex(button => button.value === this.value);\n        const next = index + 1;\n        // Keep track of the currently checked button\n        this.checked = buttons.find(button => button.value === this.value);\n        for (const button of buttons) {\n            button.classList.remove('segment-button-after-checked');\n        }\n        if (next < buttons.length) {\n            buttons[next].classList.add('segment-button-after-checked');\n        }\n    }\n    setNextIndex(detail, isEnd = false) {\n        const isRTL = document.dir === 'rtl';\n        const activated = this.activated;\n        const buttons = this.getButtons();\n        const index = buttons.findIndex(button => button.value === this.value);\n        const previous = buttons[index];\n        let current;\n        let nextIndex;\n        if (index === -1) {\n            return;\n        }\n        // Get the element that the touch event started on in case\n        // it was the checked button, then we will move the indicator\n        const rect = previous.getBoundingClientRect();\n        const left = rect.left;\n        const width = rect.width;\n        // Get the element that the gesture is on top of based on the currentX of the\n        // gesture event and the Y coordinate of the starting element, since the gesture\n        // can move up and down off of the segment\n        const currentX = detail.currentX;\n        const previousY = rect.top + (rect.height / 2);\n        const nextEl = document.elementFromPoint(currentX, previousY);\n        const decreaseIndex = isRTL ? currentX > (left + width) : currentX < left;\n        const increaseIndex = isRTL ? currentX < left : currentX > (left + width);\n        // If the indicator is currently activated then we have started the gesture\n        // on top of the checked button so we need to slide the indicator\n        // by checking the button next to it as we move\n        if (activated && !isEnd) {\n            // Decrease index, move left in LTR & right in RTL\n            if (decreaseIndex) {\n                const newIndex = index - 1;\n                if (newIndex >= 0) {\n                    nextIndex = newIndex;\n                }\n                // Increase index, moves right in LTR & left in RTL\n            }\n            else if (increaseIndex) {\n                if (activated && !isEnd) {\n                    const newIndex = index + 1;\n                    if (newIndex < buttons.length) {\n                        nextIndex = newIndex;\n                    }\n                }\n            }\n            if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n                current = buttons[nextIndex];\n            }\n        }\n        // If the indicator is not activated then we will just set the indicator\n        // to the element where the gesture ended\n        if (!activated && isEnd) {\n            current = nextEl;\n        }\n        /* tslint:disable-next-line */\n        if (current != null) {\n            /**\n             * If current element is ion-segment then that means\n             * user tried to select a disabled ion-segment-button,\n             * and we should not update the ripple.\n             */\n            if (current.tagName === 'ION-SEGMENT') {\n                return false;\n            }\n            if (previous !== current) {\n                this.checkButton(previous, current);\n            }\n        }\n        return true;\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'segment': true\n        });\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'in-toolbar': hostContext('ion-toolbar', this.el), 'in-toolbar-color': hostContext('ion-toolbar[color]', this.el), 'segment-activated': this.activated, 'segment-disabled': this.disabled, 'segment-scrollable': this.scrollable }) }, h(\"slot\", null)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nSegment.style = {\n    /*STENCIL:MODE:ios*/ ios: segmentIosCss,\n    /*STENCIL:MODE:md*/ md: segmentMdCss\n};\n\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color, #fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color, #fff))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color, #fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\n\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #3880ff);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}.button-native{min-width:90px}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #3880ff));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\n\nlet ids = 0;\nconst SegmentButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.segmentEl = null;\n        this.checked = false;\n        /**\n         * If `true`, the user cannot interact with the segment button.\n         */\n        this.disabled = false;\n        /**\n         * Set the layout of the text and icon in the segment.\n         */\n        this.layout = 'icon-top';\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        /**\n         * The value of the segment button.\n         */\n        this.value = 'ion-sb-' + (ids++);\n        this.updateState = () => {\n            if (this.segmentEl) {\n                this.checked = this.segmentEl.value === this.value;\n            }\n        };\n    }\n    connectedCallback() {\n        const segmentEl = this.segmentEl = this.el.closest('ion-segment');\n        if (segmentEl) {\n            this.updateState();\n            segmentEl.addEventListener('ionSelect', this.updateState);\n        }\n    }\n    disconnectedCallback() {\n        const segmentEl = this.segmentEl;\n        if (segmentEl) {\n            segmentEl.removeEventListener('ionSelect', this.updateState);\n            this.segmentEl = null;\n        }\n    }\n    get hasLabel() {\n        return !!this.el.querySelector('ion-label');\n    }\n    get hasIcon() {\n        return !!this.el.querySelector('ion-icon');\n    }\n    render() {\n        const { checked, type, disabled, hasIcon, hasLabel, layout } = this;\n        const mode = getIonMode(this);\n        return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, class: {\n                [mode]: true,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'in-segment': hostContext('ion-segment', this.el),\n                'in-segment-color': hostContext('ion-segment[color]', this.el),\n                'segment-button-has-label': hasLabel,\n                'segment-button-has-icon': hasIcon,\n                'segment-button-has-label-only': hasLabel && !hasIcon,\n                'segment-button-has-icon-only': hasIcon && !hasLabel,\n                'segment-button-disabled': disabled,\n                'segment-button-checked': checked,\n                [`segment-button-layout-${layout}`]: true,\n                'ion-activatable': true,\n                'ion-activatable-instant': true,\n                'ion-focusable': true,\n            } }, h(\"button\", { type: type, \"aria-pressed\": checked ? 'true' : 'false', class: \"button-native\", disabled: disabled }, h(\"span\", { class: \"button-inner\" }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { part: \"indicator\", class: {\n                'segment-button-indicator': true,\n                'segment-button-indicator-animated': true\n            } }, h(\"div\", { part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\n    }\n    get el() { return getElement(this); }\n};\nSegmentButton.style = {\n    /*STENCIL:MODE:ios*/ ios: segmentButtonIosCss,\n    /*STENCIL:MODE:md*/ md: segmentButtonMdCss\n};\n\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\n"]}