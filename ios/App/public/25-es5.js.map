{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-img.entry.js"],"names":["imgCss","Img","hostRef","onLoad","ionImgDidLoad","emit","onError","ionError","ionImgWillLoad","addIO","src","undefined","window","removeIO","io","IntersectionObserver","data","isIntersecting","load","observe","el","setTimeout","loadError","loadSrc","disconnect","decoding","alt","part","style"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,QAAMA,MAAM,GAAG,oMAAf;;AAEA,QAAMC,GAAG;AACL,mBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjB,qEAAiB,IAAjB,EAAuBA,OAAvB;;AACA,aAAKC,MAAL,GAAc,YAAM;AAChB,eAAI,CAACC,aAAL,CAAmBC,IAAnB;AACH,SAFD;;AAGA,aAAKC,OAAL,GAAe,YAAM;AACjB,eAAI,CAACC,QAAL,CAAcF,IAAd;AACH,SAFD;;AAGA,aAAKG,cAAL,GAAsB,6DAAY,IAAZ,EAAkB,gBAAlB,EAAoC,CAApC,CAAtB;AACA,aAAKJ,aAAL,GAAqB,6DAAY,IAAZ,EAAkB,eAAlB,EAAmC,CAAnC,CAArB;AACA,aAAKG,QAAL,GAAgB,6DAAY,IAAZ,EAAkB,UAAlB,EAA8B,CAA9B,CAAhB;AACH;;AAZI;AAAA;AAAA,qCAaQ;AACT,eAAKE,KAAL;AACH;AAfI;AAAA;AAAA,2CAgBc;AACf,eAAKA,KAAL;AACH;AAlBI;AAAA;AAAA,gCAmBG;AAAA;;AACJ,cAAI,KAAKC,GAAL,KAAaC,SAAjB,EAA4B;AACxB;AACH;;AACD,cAAI,0BAA0BC,MAA9B,EAAsC;AAClC,iBAAKC,QAAL;AACA,iBAAKC,EAAL,GAAU,IAAIC,oBAAJ,CAAyB,UAAAC,IAAI,EAAI;AACvC;AACA;AACA;AACA,kBAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQC,cAAZ,EAA4B;AACxB,sBAAI,CAACC,IAAL;;AACA,sBAAI,CAACL,QAAL;AACH;AACJ,aARS,CAAV;AASA,iBAAKC,EAAL,CAAQK,OAAR,CAAgB,KAAKC,EAArB;AACH,WAZD,MAaK;AACD;AACAC,sBAAU,CAAC;AAAA,qBAAM,MAAI,CAACH,IAAL,EAAN;AAAA,aAAD,EAAoB,GAApB,CAAV;AACH;AACJ;AAxCI;AAAA;AAAA,+BAyCE;AACH,eAAKI,SAAL,GAAiB,KAAKhB,OAAtB;AACA,eAAKiB,OAAL,GAAe,KAAKb,GAApB;AACA,eAAKF,cAAL,CAAoBH,IAApB;AACH;AA7CI;AAAA;AAAA,mCA8CM;AACP,cAAI,KAAKS,EAAT,EAAa;AACT,iBAAKA,EAAL,CAAQU,UAAR;AACA,iBAAKV,EAAL,GAAUH,SAAV;AACH;AACJ;AAnDI;AAAA;AAAA,iCAoDI;AACL,iBAAQ,6DAAE,oDAAF,EAAQ;AAAE,qBAAO,oEAAW,IAAX;AAAT,WAAR,EAAqC,6DAAE,KAAF,EAAS;AAAEc,oBAAQ,EAAE,OAAZ;AAAqBf,eAAG,EAAE,KAAKa,OAA/B;AAAwCG,eAAG,EAAE,KAAKA,GAAlD;AAAuDvB,kBAAM,EAAE,KAAKA,MAApE;AAA4EG,mBAAO,EAAE,KAAKgB,SAA1F;AAAqGK,gBAAI,EAAE;AAA3G,WAAT,CAArC,CAAR;AACH;AAtDI;AAAA;AAAA,4BAuDI;AAAE,iBAAO,6DAAW,IAAX,CAAP;AAA0B;AAvDhC;AAAA;AAAA,4BAwDiB;AAAE,iBAAO;AAC3B,mBAAO,CAAC,YAAD;AADoB,WAAP;AAEpB;AA1DC;;AAAA;AAAA,OAAT;;AA4DA1B,OAAG,CAAC2B,KAAJ,GAAY5B,MAAZ","file":"25-es5.js","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-e23c3ffd.js';\nimport { b as getIonMode } from './ionic-global-fbc9a2ac.js';\n\nconst imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\n\nconst Img = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.onLoad = () => {\n            this.ionImgDidLoad.emit();\n        };\n        this.onError = () => {\n            this.ionError.emit();\n        };\n        this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\n        this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\n        this.ionError = createEvent(this, \"ionError\", 7);\n    }\n    srcChanged() {\n        this.addIO();\n    }\n    componentDidLoad() {\n        this.addIO();\n    }\n    addIO() {\n        if (this.src === undefined) {\n            return;\n        }\n        if ('IntersectionObserver' in window) {\n            this.removeIO();\n            this.io = new IntersectionObserver(data => {\n                // because there will only ever be one instance\n                // of the element we are observing\n                // we can just use data[0]\n                if (data[0].isIntersecting) {\n                    this.load();\n                    this.removeIO();\n                }\n            });\n            this.io.observe(this.el);\n        }\n        else {\n            // fall back to setTimeout for Safari and IE\n            setTimeout(() => this.load(), 200);\n        }\n    }\n    load() {\n        this.loadError = this.onError;\n        this.loadSrc = this.src;\n        this.ionImgWillLoad.emit();\n    }\n    removeIO() {\n        if (this.io) {\n            this.io.disconnect();\n            this.io = undefined;\n        }\n    }\n    render() {\n        return (h(Host, { class: getIonMode(this) }, h(\"img\", { decoding: \"async\", src: this.loadSrc, alt: this.alt, onLoad: this.onLoad, onError: this.loadError, part: \"image\" })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"src\": [\"srcChanged\"]\n    }; }\n};\nImg.style = imgCss;\n\nexport { Img as ion_img };\n"]}