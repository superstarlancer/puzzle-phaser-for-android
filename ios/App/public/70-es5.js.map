{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-textarea-ios.entry.js"],"names":["textareaIosCss","textareaMdCss","Textarea","hostRef","inputId","textareaIds","didBlurAfterEdit","hasFocus","autocapitalize","autofocus","clearOnEdit","debounce","disabled","name","readonly","required","spellcheck","autoGrow","value","onInput","ev","nativeInput","emitStyle","ionInput","emit","onFocus","focusChange","ionFocus","onBlur","ionBlur","onKeyDown","checkClearOnEdit","ionChange","ionStyle","getValue","runAutoGrow","debounceChanged","document","dispatchEvent","CustomEvent","detail","el","style","height","scrollHeight","textareaWrapper","focus","Promise","resolve","placeholder","hasValue","mode","labelId","label","id","Object","assign","color","ref","autoCapitalize","autoFocus","enterKeyHint","enterkeyhint","inputMode","inputmode","maxLength","maxlength","minLength","minlength","readOnly","spellCheck","cols","rows","wrap","ios","md"],"mappings":"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","file":"70-es5.js","sourcesContent":["import { r as registerInstance, d as createEvent, f as readTask, h, H as Host, e as getElement } from './index-e23c3ffd.js';\nimport { b as getIonMode } from './ionic-global-fbc9a2ac.js';\nimport { d as debounceEvent, r as raf, f as findItemLabel } from './helpers-5c745fbd.js';\nimport { c as createColorClasses } from './theme-c2dc54d9.js';\n\nconst textareaIosCss = \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2}.ion-color.sc-ion-textarea-ios-h{background:initial}.ion-color.sc-ion-textarea-ios-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h,ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:0.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios,[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios,[dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-ios-h,.item-label-stacked .sc-ion-textarea-ios-h,.item-label-floating.sc-ion-textarea-ios-h,.item-label-floating .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\";\n\nconst textareaMdCss = \".sc-ion-textarea-md-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2}.ion-color.sc-ion-textarea-md-h{background:initial}.ion-color.sc-ion-textarea-md-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-md-h,ion-item .sc-ion-textarea-md-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-md-h{--padding-start:0}.native-textarea.sc-ion-textarea-md{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-md::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-md{opacity:0.4}.cloned-input.sc-ion-textarea-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-md .cloned-input.sc-ion-textarea-md,[dir=rtl].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md,[dir=rtl] .sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md{left:unset;right:unset;right:0}.sc-ion-textarea-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:8px;margin-left:0;margin-right:0;margin-top:8px;margin-bottom:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-md-h,.item-label-stacked .sc-ion-textarea-md-h,.item-label-floating.sc-ion-textarea-md-h,.item-label-floating .sc-ion-textarea-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}\";\n\nconst Textarea = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-input-${textareaIds++}`;\n        this.didBlurAfterEdit = false;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'none';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\n         */\n        this.clearOnEdit = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the textarea.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * If `true`, the element height will increase based on the value.\n         */\n        this.autoGrow = false;\n        /**\n         * The value of the textarea.\n         */\n        this.value = '';\n        this.onInput = (ev) => {\n            if (this.nativeInput) {\n                this.value = this.nativeInput.value;\n            }\n            this.emitStyle();\n            this.ionInput.emit(ev);\n        };\n        this.onFocus = () => {\n            this.hasFocus = true;\n            this.focusChange();\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.hasFocus = false;\n            this.focusChange();\n            this.ionBlur.emit();\n        };\n        this.onKeyDown = () => {\n            this.checkClearOnEdit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    }\n    debounceChanged() {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    /**\n     * Update the native input element when the value changes\n     */\n    valueChanged() {\n        const nativeInput = this.nativeInput;\n        const value = this.getValue();\n        if (nativeInput && nativeInput.value !== value) {\n            nativeInput.value = value;\n        }\n        this.runAutoGrow();\n        this.emitStyle();\n        this.ionChange.emit({ value });\n    }\n    connectedCallback() {\n        this.emitStyle();\n        this.debounceChanged();\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n                detail: this.el\n            }));\n        }\n    }\n    disconnectedCallback() {\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n                detail: this.el\n            }));\n        }\n    }\n    componentDidLoad() {\n        raf(() => this.runAutoGrow());\n    }\n    runAutoGrow() {\n        const nativeInput = this.nativeInput;\n        if (nativeInput && this.autoGrow) {\n            readTask(() => {\n                nativeInput.style.height = 'auto';\n                nativeInput.style.height = nativeInput.scrollHeight + 'px';\n                if (this.textareaWrapper) {\n                    this.textareaWrapper.style.height = nativeInput.scrollHeight + 'px';\n                }\n            });\n        }\n    }\n    /**\n     * Sets focus on the specified `ion-textarea`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    async setFocus() {\n        if (this.nativeInput) {\n            this.nativeInput.focus();\n        }\n    }\n    /**\n     * Returns the native `<textarea>` element used under the hood.\n     */\n    getInputElement() {\n        return Promise.resolve(this.nativeInput);\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'textarea': true,\n            'input': true,\n            'interactive-disabled': this.disabled,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus\n        });\n    }\n    /**\n     * Check if we need to clear the text input if clearOnEdit is enabled\n     */\n    checkClearOnEdit() {\n        if (!this.clearOnEdit) {\n            return;\n        }\n        // Did the input value change after it was blurred and edited?\n        if (this.didBlurAfterEdit && this.hasValue()) {\n            // Clear the input\n            this.value = '';\n        }\n        // Reset the flag\n        this.didBlurAfterEdit = false;\n    }\n    focusChange() {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n        this.emitStyle();\n    }\n    hasValue() {\n        return this.getValue() !== '';\n    }\n    getValue() {\n        return this.value || '';\n    }\n    render() {\n        const mode = getIonMode(this);\n        const value = this.getValue();\n        const labelId = this.inputId + '-lbl';\n        const label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true }) }, h(\"div\", { class: \"textarea-wrapper\", ref: el => this.textareaWrapper = el }, h(\"textarea\", { class: \"native-textarea\", ref: el => this.nativeInput = el, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, value))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"debounce\": [\"debounceChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet textareaIds = 0;\nTextarea.style = {\n    /*STENCIL:MODE:ios*/ ios: textareaIosCss,\n    /*STENCIL:MODE:md*/ md: textareaMdCss\n};\n\nexport { Textarea as ion_textarea };\n"]}